Index: src/main/java/at/ac/fhcampuswien/simplechattool/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package at.ac.fhcampuswien.simplechattool;\r\n\r\nimport java.io.*;\r\nimport java.net.InetAddress;\r\nimport java.net.Socket;\r\nimport java.net.UnknownHostException;\r\nimport javafx.application.Application;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.FlowPane;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.text.Text;\r\nimport javafx.scene.text.TextFlow;\r\nimport javafx.stage.Stage;\r\n\r\nimport at.ac.fhcampuswien.simplechattool.LoginController;\r\nimport at.ac.fhcampuswien.simplechattool.ChatController;\r\n\r\n/*\r\nSources:\r\nhttps://github.com/dvcarrillo/sockets-chat\r\nhttps://github.com/ashmeet4293/Chat-Application-in-java-using-javafx\r\nhttps://luisgcenci.medium.com/building-a-group-chat-app-with-javafx-multithread-socket-programming-in-java-c8c11fd8c927\r\n*/\r\n\r\npublic class Client {\r\n    private String username;\r\n    private Socket clientSocket;\r\n    private InputStream inputStream;\r\n    private OutputStream outputStream;\r\n    private DataInputStream inData;\r\n    private DataOutputStream outData;\r\n    private boolean option = true;\r\n    private ChatController chatView;\r\n    private ChatController chatViewMeins;\r\n\r\n\r\n    public Client(ChatController chatView) {\r\n        this.chatView = chatView;\r\n    }\r\n\r\n    public Client() {\r\n\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String name) {\r\n        username = name;\r\n    }\r\n\r\n\r\n\r\n    public ChatController getChatController(){\r\n        return chatViewMeins;\r\n    }\r\n\r\n    public void setConnection(String server, int port) {\r\n        boolean success = false;\r\n        while(!success) {\r\n            try {\r\n                InetAddress host = InetAddress.getByName(server);\r\n                System.out.println(\"Server \" + server + \" is Online\");\r\n                success = true;\r\n\r\n            } catch (UnknownHostException e) {\r\n                System.out.println(\"Server is offline, please provide a correct server\");\r\n                System.exit(0);\r\n            }\r\n        }\r\n        if( port < 0 || port > 65535)\r\n        {\r\n            System.out.print(\"Enter the right port number ..! \" );\r\n            System.exit(0);\r\n        }\r\n        try {\r\n            clientSocket = new Socket(server, port);\r\n            Thread clientThread = new Thread(() -> {\r\n                while(option) {\r\n                    listenData(clientSocket);\r\n\r\n                }\r\n            });\r\n            clientThread.start();\r\n            System.out.println(\"Connection successful to server \" + server + \" and port \" + port + \".\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"ERROR: Connection error\");\r\n            System.exit(0);\r\n        }\r\n    }\r\n\r\n    public void sendMessage(String msg) {\r\n        try {\r\n            outputStream = clientSocket.getOutputStream();\r\n            outData = new DataOutputStream(outputStream);\r\n            //Add Date?\r\n            //SimpleDateFormat formatter = new SimpleDateFormat(\"dd.MM.yyyy HH:mm:ss\");\r\n            //outData.write(formatter.format(new Date()).toString());\r\n            //Add username?\r\n            outData.writeUTF(msg);\r\n            outData.flush();\r\n        } catch (IOException e) {\r\n            System.err.println(\"ERROR: Error sending data\");\r\n        }\r\n    }\r\n\r\n    public void listenData(Socket clientSocket) {\r\n        try {\r\n            Client client = LoginController.getMyClient();\r\n            inputStream = clientSocket.getInputStream();\r\n            inData = new DataInputStream(inputStream);\r\n            //String outTest = new BufferedReader(new InputStreamReader(inputStream));\r\n            //System.out.print(\"Received Message: \" + inData.readUTF());\r\n            //ChatController asdf = getChatController();\r\n            //asdf.addRemoteMessage(inData.readUTF());\r\n            //asdf.addClientMessage(inData.readUTF());\r\n            //chatView.addRemoteMessage(\"adsfasdlfkjlk\");\r\n            //System.out.println(inData);\r\n            Message newMessage = new Message(client.getUsername(), \"Textiwas\");\r\n\r\n            //client.chatView.addRemoteMessage(inData.readUTF());\r\n        } catch(IOException e) {\r\n            System.err.println(\"ERROR: Error listening to data\");\r\n        }\r\n    }\r\n\r\n    public void closeConnection() {\r\n        try {\r\n            outData.close();\r\n            inData.close();\r\n            clientSocket.close();\r\n        } catch (IOException ex) {\r\n            System.err.println(\"ERROR: Error closing connection\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public  static void main(String [] args) throws Exception {\r\n        ChatController chatView = new ChatController();\r\n        Client client = new Client(chatView);\r\n\r\n        LoginController loginController = new LoginController();\r\n        String username = loginController.getUsername();\r\n        client.setUsername(username);\r\n\r\n        String ip = loginController.getIP();\r\n        int port = loginController.getPort();\r\n        client.setConnection(ip, port);\r\n\r\n        chatView.setClient(client);\r\n        //chatViewMeins = chatView;\r\n    }\r\n\r\n\r\n}\r\n\r\n/*\r\npublic class Client {\r\n\r\n    private Socket clientSocket = null;\r\n    private DataInputStream in = null;\r\n    private DataOutputStream out = null;\r\n    private String username = \"\";\r\n    private ChatController c = new ChatController();\r\n    private TextFlow chat = c.getTextFlow();\r\n\r\n    public Client(String server, int port, String nickname) {\r\n\r\n        try {\r\n            clientSocket = new Socket(server, port);\r\n            in = new DataInputStream(new BufferedInputStream(clientSocket.getInputStream()));\r\n            out = new DataOutputStream(clientSocket.getOutputStream());\r\n            BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\r\n\r\n            username = nickname;\r\n            setUsername(username);\r\n            Text welcome = new Text(\"Welcome \" + username + \"! You are now online.\");\r\n            chat.getChildren().add(welcome);\r\n            welcome.setFill(Color.GREEN);\r\n            chat.getChildren().add(new Text(System.lineSeparator()));\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        Thread sender = new Thread(() -> {\r\n            String msg;\r\n            LocalDate localDate = LocalDate.now();\r\n            LocalTime localTime = LocalTime.now().truncatedTo(ChronoUnit.MINUTES);\r\n            try {\r\n                msg = c.getMessage();\r\n                String input = username + \" @ \" + localDate + \" \" + localTime + \": \" + msg + \"\\n\";\r\n                Text text = new Text(input);\r\n                chat.getChildren().addAll(text);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            try {\r\n                Thread.sleep(2000);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n        sender.start();\r\n\r\n        Thread receiver = new Thread(new Runnable() {\r\n            String msg;\r\n            LocalDate localDate = LocalDate.now();\r\n            LocalTime localTime = LocalTime.now().truncatedTo(ChronoUnit.MINUTES);\r\n\r\n            public void run() {\r\n                try {\r\n                    msg = c.getMessage();\r\n                    while (msg != null) {\r\n                        String input = \"Server @ \" + localDate + \" \" + localTime + \": \" + msg + \"\\n\";\r\n                        Text text = new Text(input);\r\n                        chat.getChildren().addAll(text);\r\n                        msg = c.getMessage();\r\n                    }\r\n                    chat.getChildren().add(new Text(\"Server out of service\"));\r\n                    out.close();\r\n                    clientSocket.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n        receiver.start();\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n}\r\n\r\n    //public static void main(String[] args) {\r\n        /*\r\n        try {\r\n\r\n            Thread receiver = new Thread(new Runnable()\r\n            {\r\n                String msg;\r\n                SimpleDateFormat formatter = new SimpleDateFormat(\"dd.MM.yyyy HH:mm:ss\");\r\n\r\n                public void run() {\r\n                    try {\r\n                        msg = in.readLine();\r\n                        while(msg!=null)\r\n                        {\r\n                            System.out.println(\"Server \" + formatter.format(new Date()) + \" : \" + msg);\r\n                            msg = in.readLine();\r\n                        }\r\n\r\n                        System.out.println(\"Server out of service\");\r\n                        out.close();\r\n                        clientSocket.close();\r\n\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            });\r\n            receiver.start();\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n}\r\n*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java b/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java
--- a/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java	(revision 76e0f427a5e6a3a1afbb46b54d1bbe016703bbd7)
+++ b/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java	(date 1642188120673)
@@ -1,26 +1,11 @@
 package at.ac.fhcampuswien.simplechattool;
 
+import javafx.application.Application;
+
 import java.io.*;
 import java.net.InetAddress;
 import java.net.Socket;
 import java.net.UnknownHostException;
-import javafx.application.Application;
-import javafx.event.EventHandler;
-import javafx.fxml.FXML;
-import javafx.fxml.FXMLLoader;
-import javafx.fxml.Initializable;
-import javafx.scene.Scene;
-import javafx.scene.control.*;
-import javafx.scene.image.ImageView;
-import javafx.scene.input.MouseEvent;
-import javafx.scene.layout.FlowPane;
-import javafx.scene.layout.GridPane;
-import javafx.scene.text.Text;
-import javafx.scene.text.TextFlow;
-import javafx.stage.Stage;
-
-import at.ac.fhcampuswien.simplechattool.LoginController;
-import at.ac.fhcampuswien.simplechattool.ChatController;
 
 /*
 Sources:
@@ -37,16 +22,16 @@
     private DataInputStream inData;
     private DataOutputStream outData;
     private boolean option = true;
-    private ChatController chatView;
-    private ChatController chatViewMeins;
+    private LoginController loginController;
+    private ChatController chatController;
 
 
-    public Client(ChatController chatView) {
-        this.chatView = chatView;
+    public Client(ChatController chatController) {
+        this.chatController = chatController;
     }
 
-    public Client() {
-
+    public Client(LoginController loginController) {
+        this.loginController = loginController;
     }
 
     public String getUsername() {
@@ -57,10 +42,8 @@
         username = name;
     }
 
-
-
     public ChatController getChatController(){
-        return chatViewMeins;
+        return chatController;
     }
 
     public void setConnection(String server, int port) {
@@ -101,10 +84,6 @@
         try {
             outputStream = clientSocket.getOutputStream();
             outData = new DataOutputStream(outputStream);
-            //Add Date?
-            //SimpleDateFormat formatter = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss");
-            //outData.write(formatter.format(new Date()).toString());
-            //Add username?
             outData.writeUTF(msg);
             outData.flush();
         } catch (IOException e) {
@@ -114,7 +93,7 @@
 
     public void listenData(Socket clientSocket) {
         try {
-            Client client = LoginController.getMyClient();
+            // Client client = LoginController.getMyClient();
             inputStream = clientSocket.getInputStream();
             inData = new DataInputStream(inputStream);
             //String outTest = new BufferedReader(new InputStreamReader(inputStream));
@@ -124,9 +103,8 @@
             //asdf.addClientMessage(inData.readUTF());
             //chatView.addRemoteMessage("adsfasdlfkjlk");
             //System.out.println(inData);
-            Message newMessage = new Message(client.getUsername(), "Textiwas");
 
-            //client.chatView.addRemoteMessage(inData.readUTF());
+            chatController.addRemoteMessage(inData.readUTF());
         } catch(IOException e) {
             System.err.println("ERROR: Error listening to data");
         }
@@ -144,23 +122,18 @@
 
 
 
-    public  static void main(String [] args) throws Exception {
-        ChatController chatView = new ChatController();
-        Client client = new Client(chatView);
-
+    public static void main(String [] args) throws Exception {
         LoginController loginController = new LoginController();
+        ChatController chatController = new ChatController();
+        Client cli = new Client(chatController);
+
         String username = loginController.getUsername();
-        client.setUsername(username);
+        cli.setUsername(username);
 
         String ip = loginController.getIP();
         int port = loginController.getPort();
-        client.setConnection(ip, port);
-
-        chatView.setClient(client);
-        //chatViewMeins = chatView;
+        cli.setConnection(ip, port);
     }
-
-
 }
 
 /*
Index: src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package at.ac.fhcampuswien.simplechattool;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Text;\r\nimport javafx.scene.text.TextFlow;\r\nimport at.ac.fhcampuswien.simplechattool.Client;\r\nimport at.ac.fhcampuswien.simplechattool.Message;\r\nimport at.ac.fhcampuswien.simplechattool.Server;\r\n\r\npublic class ChatController {\r\n        @FXML\r\n        private Button btn_disconnect;\r\n        @FXML\r\n        private Button btn_send;\r\n        @FXML\r\n        private Button btn_SendMessage;\r\n        @FXML\r\n        private TextField field_text;\r\n        @FXML\r\n        private TextFlow textFlow;\r\n\r\n        private Client client;\r\n        private Server server;\r\n        private int mode;\r\n\r\n        public ChatController() {\r\n                mode = 0;\r\n        }\r\n\r\n        public void setClient(Client cli) {\r\n                mode = 1;\r\n                this.client = cli;\r\n        }\r\n\r\n        public void setServer(Server serv) {\r\n                mode = 2;\r\n                this.server = serv;\r\n        }\r\n\r\n        public void addClientMessage(String msg) {\r\n                if (mode == 1) {\r\n                        Message message = new Message(client.getUsername(), msg);\r\n                        String addMessage = \"[\" + message.getTime() + \" \" + message.getUsername() + \"]->\\t\" + message.getText();\r\n                        Text text = new Text(addMessage);\r\n                        textFlow.getChildren().add(text);\r\n                        textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n                } /*else {\r\n                        Message message = new Message(server.getUsername(), msg);\r\n                        String addMessage = \"[\" + message.getTime() + \" \" + message.getUsername() + \"]->\\t\" + message.getText();\r\n                        Text text = new Text(addMessage);\r\n                        textFlow.getChildren().add(text);\r\n                        textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n                }\r\n                */\r\n                Client client = LoginController.getMyClient();\r\n                System.out.println(\"Message to addClientMessage:\" + msg + \"username\" + client.getUsername());\r\n                Message message = new Message(client.getUsername(), msg);\r\n                String addMessage = \"[\" + message.getTime() + \" \" + message.getUsername() + \"]->\\t\" + message.getText();\r\n                Text text = new Text(addMessage);\r\n                textFlow.getChildren().add(text);\r\n                textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n\r\n        }\r\n\r\n        public void addRemoteMessage(String msg) {\r\n                /*\r\n                if (mode == 1) {\r\n                        Message message = new Message(\"Partner\", msg);\r\n                        String addMessage = \"[\" + message.getTime() + \" \" + message.getUsername() + \"]->\\t\" + message.getText();\r\n                        Text text = new Text(addMessage);\r\n                        textFlow.getChildren().add(text);\r\n                        textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n                } else {\r\n                        Message message = new Message(\"Partner\", msg);\r\n                        String addMessage = \"[\" + message.getTime() + \" \" + message.getUsername() + \"]->\\t\" + message.getText();\r\n                        Text text = new Text(addMessage);\r\n                        textFlow.getChildren().add(text);\r\n                        textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n                }\r\n                */\r\n\r\n                System.out.println(\"Message to GUI: \" + msg);\r\n                //Message message = new Message(\"Partner\", msg);\r\n                //String addMessage = \"[\" + message.getTime() + \" \" + message.getUsername() + \"]->\\t\" + message.getText();\r\n                //Text text = new Text(addMessage);\r\n                //textFlow.getChildren().add(text);\r\n                Text text = new Text(msg);\r\n                textFlow.getChildren().add(text);\r\n                textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n        }\r\n\r\n        @FXML\r\n        public void sendMessage() {\r\n                Client client = LoginController.getMyClient();\r\n                //System.out.println(\"Button for Message send pressed before any if...\");\r\n                if (field_text.getText().isEmpty()) {\r\n                        Text warning = new Text(\"Please enter a non-empty message!\");\r\n                        warning.setFill(Color.RED);\r\n                        textFlow.getChildren().add(warning);\r\n                        textFlow.getChildren().add(new Text(System.lineSeparator()));\r\n                } else {\r\n                        System.out.println(\"Button for Message send pressed\");\r\n                        String msg = field_text.getText();\r\n                        System.out.println(\"Message read from input: \" + msg);\r\n                        //client.sendMessage(\"Automated Message after pressing Button:\");\r\n                        client.sendMessage(msg);\r\n                        /*\r\n                        if (this.mode == 1) {\r\n                                client.sendMessage(msg);\r\n                        } /* else {\r\n                                server.sendMessage(msg);\r\n                        } */\r\n\r\n                        addClientMessage(msg);\r\n\r\n                }\r\n\r\n                //String msg = field_text.getText();\r\n                //if (this.mode == 1) {\r\n                //        client.sendMessage(msg);\r\n                //} /*else {\r\n                //        server.sendMessage(msg);\r\n               // } */\r\n                //addClientMessage(msg);\r\n                field_text.clear();\r\n        }\r\n\r\n        @FXML\r\n        public void disconnectChat() throws Exception {\r\n                if(mode == 1) {\r\n                        client.closeConnection();\r\n                } /*else {\r\n                        server.closeConnection();\r\n                }*/\r\n                Client client = LoginController.getMyClient();\r\n                client.closeConnection();\r\n                LoginController login = new LoginController();\r\n                login.changeScene(\"loginwindow.fxml\");\r\n\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java b/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java
--- a/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java	(revision 76e0f427a5e6a3a1afbb46b54d1bbe016703bbd7)
+++ b/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java	(date 1642188120659)
@@ -28,20 +28,6 @@
         private Server server;
         private int mode;
 
-        public ChatController() {
-                mode = 0;
-        }
-
-        public void setClient(Client cli) {
-                mode = 1;
-                this.client = cli;
-        }
-
-        public void setServer(Server serv) {
-                mode = 2;
-                this.server = serv;
-        }
-
         public void addClientMessage(String msg) {
                 if (mode == 1) {
                         Message message = new Message(client.getUsername(), msg);
@@ -85,11 +71,9 @@
                 */
 
                 System.out.println("Message to GUI: " + msg);
-                //Message message = new Message("Partner", msg);
-                //String addMessage = "[" + message.getTime() + " " + message.getUsername() + "]->\t" + message.getText();
-                //Text text = new Text(addMessage);
-                //textFlow.getChildren().add(text);
-                Text text = new Text(msg);
+                Message message = new Message(client.getUsername(), msg);
+                String addMessage = "[" + message.getTime() + " " + message.getUsername() + "]->\t" + message.getText();
+                Text text = new Text(addMessage);
                 textFlow.getChildren().add(text);
                 textFlow.getChildren().add(new Text(System.lineSeparator()));
         }
Index: src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package at.ac.fhcampuswien.simplechattool;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class LoginController extends Application implements Runnable {\r\n    @FXML\r\n    private Button btn_login;\r\n    @FXML\r\n    private TextField input_nickname;\r\n    @FXML\r\n    private TextField input_port;\r\n    @FXML\r\n    private TextField input_server;\r\n    @FXML\r\n    private Label warning_msg;\r\n\r\n    private String server;\r\n    private int port;\r\n    private String nickname;\r\n    private static Stage stg;\r\n\r\n    private static Client myClient;\r\n\r\n\r\n    public void start(Stage primaryStage) throws Exception {\r\n        stg = primaryStage;\r\n        Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"loginwindow.fxml\")));\r\n        primaryStage.setTitle(\"Simple Chat Tool\");\r\n        primaryStage.setScene(new Scene(root, 600, 400));\r\n        primaryStage.show();\r\n    }\r\n\r\n    public String getIP() {\r\n        return server;\r\n    }\r\n\r\n    public int getPort() {\r\n        return port;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return nickname;\r\n    }\r\n\r\n    public void changeScene(String fxml) throws IOException {\r\n        Parent pane = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(fxml)));\r\n        stg.getScene().setRoot(pane);\r\n    }\r\n\r\n    public static Client getMyClient() {\r\n        return myClient;\r\n    }\r\n\r\n    @FXML\r\n    public void userLogin(ActionEvent event) throws IOException {\r\n        checkLogin();\r\n    }\r\n\r\n    @FXML\r\n    public void checkLogin() throws IOException {\r\n        if (input_server.getText().isEmpty() || input_port.getText().isEmpty() || input_nickname.getText().isEmpty()) {\r\n            warning_msg.setText(\"Error: Please enter your data!\");\r\n        } else if (!input_nickname.getText().isEmpty()) {\r\n            //this.nickname = input_nickname.getText();\r\n            server = input_server.getText();\r\n            port = Integer.parseInt(input_port.getText());\r\n            System.out.println(\"Username from ipnut \" + input_nickname.getText() + \"method: \" );\r\n            Client client = new Client();\r\n            client.setConnection(server, port);\r\n            client.setUsername(input_nickname.getText());\r\n            System.out.println(server + \" \" + port);\r\n            //client.setUsername(input_nickname.getText());\r\n            try {\r\n                TimeUnit.SECONDS.sleep(1);\r\n            } catch (InterruptedException ie) {\r\n                Thread.currentThread().interrupt();\r\n            }\r\n            //client.sendMessage(\"Automated Test Message\");\r\n            changeScene(\"basic-chat.fxml\");\r\n            myClient = client;\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Application.launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java b/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java
--- a/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java	(revision 76e0f427a5e6a3a1afbb46b54d1bbe016703bbd7)
+++ b/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java	(date 1642169277880)
@@ -30,12 +30,12 @@
     private int port;
     private String nickname;
     private static Stage stg;
-
     private static Client myClient;
 
-
+    @Override
     public void start(Stage primaryStage) throws Exception {
         stg = primaryStage;
+        stg.setResizable(false);
         Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("loginwindow.fxml")));
         primaryStage.setTitle("Simple Chat Tool");
         primaryStage.setScene(new Scene(root, 600, 400));
@@ -77,7 +77,7 @@
             server = input_server.getText();
             port = Integer.parseInt(input_port.getText());
             System.out.println("Username from ipnut " + input_nickname.getText() + "method: " );
-            Client client = new Client();
+            Client client = new Client(this);
             client.setConnection(server, port);
             client.setUsername(input_nickname.getText());
             System.out.println(server + " " + port);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5c703b09-d2b4-438e-98b4-1ad533bcc356\" name=\"Changes\" comment=\"*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/ClientHandler.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Server2.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.1.1/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.1.1/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.1.1/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.1.1/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/libs/SimpleChatTool-1.0-SNAPSHOT.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/libs/SimpleChatTool-1.0-SNAPSHOT.jar\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Server.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Server.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"SimpleChatTool\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"22slmIyR2Kdmokwb0TN1LkGvLXG\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.31675392\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"configurable.group.build\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.LoginController\">\r\n    <configuration name=\"Client (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"at.ac.fhcampuswien.simplechattool.Client\" />\r\n      <module name=\"SimpleChatTool.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"at.ac.fhcampuswien.simplechattool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ClientHandler\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"at.ac.fhcampuswien.simplechattool.ClientHandler\" />\r\n      <module name=\"SimpleChatTool.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"at.ac.fhcampuswien.simplechattool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LoginController\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"at.ac.fhcampuswien.simplechattool.LoginController\" />\r\n      <module name=\"SimpleChatTool.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"at.ac.fhcampuswien.simplechattool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"at.ac.fhcampuswien.simplechattool.Server\" />\r\n      <module name=\"SimpleChatTool.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"at.ac.fhcampuswien.simplechattool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"at.ac.fhcampuswien.simplechattool.Server2\" />\r\n      <module name=\"SimpleChatTool.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"at.ac.fhcampuswien.simplechattool.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SimpleChatTool [:Server2.main()]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\":Server2.main()\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list />\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Client (1)\" />\r\n      <item itemvalue=\"Application.LoginController\" />\r\n      <item itemvalue=\"Application.Server (1)\" />\r\n      <item itemvalue=\"Application.ClientHandler\" />\r\n      <item itemvalue=\"Application.Server2\" />\r\n      <item itemvalue=\"Gradle.SimpleChatTool [:Server2.main()]\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Server2\" />\r\n        <item itemvalue=\"Application.ClientHandler\" />\r\n        <item itemvalue=\"Application.LoginController\" />\r\n        <item itemvalue=\"Application.Server (1)\" />\r\n        <item itemvalue=\"Application.Client (1)\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5c703b09-d2b4-438e-98b4-1ad533bcc356\" name=\"Changes\" comment=\"\" />\r\n      <created>1640634333531</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1640634333531</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test\">\r\n      <created>1640887655600</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640887655600</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"tes\">\r\n      <created>1640887806135</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640887806135</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server\">\r\n      <created>1642098848958</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1642098848958</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"tes\" />\r\n    <MESSAGE value=\"*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java</url>\r\n          <line>82</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 76e0f427a5e6a3a1afbb46b54d1bbe016703bbd7)
+++ b/.idea/workspace.xml	(date 1642188121050)
@@ -5,8 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="5c703b09-d2b4-438e-98b4-1ad533bcc356" name="Changes" comment="*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server">
-      <change afterPath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/ClientHandler.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Server2.java" afterDir="false" />
+      <changelist_data name="Florian Panek" email="florian.panek@outlook.com" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.1.1/executionHistory/executionHistory.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.1.1/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.1.1/fileHashes/fileHashes.bin" afterDir="false" />
@@ -16,7 +15,7 @@
       <change beforePath="$PROJECT_DIR$/build/libs/SimpleChatTool-1.0-SNAPSHOT.jar" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/SimpleChatTool-1.0-SNAPSHOT.jar" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/ChatController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Client.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/Server.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -84,7 +83,7 @@
     <property name="project.structure.side.proportion" value="0.31675392" />
     <property name="settings.editor.selected.configurable" value="configurable.group.build" />
   </component>
-  <component name="RunManager" selected="Application.LoginController">
+  <component name="RunManager" selected="Application.Client (1)">
     <configuration name="Client (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="at.ac.fhcampuswien.simplechattool.Client" />
       <module name="SimpleChatTool.main" />
@@ -250,15 +249,4 @@
     <MESSAGE value="*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server" />
     <option name="LAST_COMMIT_MESSAGE" value="*)Client/Server startable/running&#10;*)message received by Server and displayed on cmd&#10;*)messages are sent successfully via GUI to Server" />
   </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/at/ac/fhcampuswien/simplechattool/LoginController.java</url>
-          <line>82</line>
-          <option name="timeStamp" value="3" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
-  </component>
 </project>
\ No newline at end of file
